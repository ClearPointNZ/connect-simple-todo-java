<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>cd.connect</groupId>
	<artifactId>todo-backend</artifactId>
	<version>1.1-SNAPSHOT</version>

	<properties>
		<docker.appname>${project.artifactId}</docker.appname>
		<docker.appversion>${project.version}</docker.appversion>
		<docker.project>connect_todo</docker.project>
	</properties>

	<dependencies>
		<dependency>
			<groupId>cd.connect</groupId>
			<artifactId>todo-api</artifactId>
			<version>1.1-SNAPSHOT</version>
		</dependency>

		<!--
		- application lifecycle
		- composite app?
		-->

		<dependency>
			<groupId>cd.connect.todo</groupId>
			<artifactId>composite-app</artifactId>
			<version>1.1-SNAPSHOT</version>
		</dependency>

    <dependency>
      <groupId>cd.connect.features</groupId>
      <artifactId>feature-service-client-rest</artifactId>
      <version>[2.1, 3)</version>
    </dependency>

		<dependency>
			<groupId>cd.connect.composites.java</groupId>
			<artifactId>connect-composite-test</artifactId>
			<version>[1.1, 2)</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>app</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.0.1</version>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
          <release>11</release>
					<executable>javac11</executable>
					<useIncrementalCompilation>false</useIncrementalCompilation>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>1.20</version>
				<executions>
					<execution>
						<id>licences</id>
						<goals>
							<goal>add-third-party</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
      <plugin>
        <groupId>org.gaul</groupId>
        <artifactId>modernizer-maven-plugin</artifactId>
        <version>1.8.0</version>
        <configuration>
          <failOnViolations>false</failOnViolations>
          <javaVersion>1.8</javaVersion>
        </configuration>
        <executions>
          <execution>
            <id>modernizer</id>
            <phase>verify</phase>
            <goals>
              <goal>modernizer</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack todo api</id>
						<phase>initialize</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>cd.connect</groupId>
									<artifactId>todo-api</artifactId>
									<version>1.1-SNAPSHOT</version>
									<type>jar</type>
									<outputDirectory>${project.basedir}/swagger/</outputDirectory>
								</artifactItem>
							</artifactItems>
							<overWriteReleases>true</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
				</executions>
			</plugin>
      
			<plugin>
        <groupId>io.swagger.codegen.v3</groupId>
        <artifactId>swagger-codegen-maven-plugin</artifactId>
        <version>3.0.8</version>
        <dependencies>
					<dependency>
						<groupId>cd.connect.openapi</groupId>
						<artifactId>connect-openapi-jersey2</artifactId>
						<version>3.5</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>todo-api</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<phase>generate-sources</phase>
						<configuration>
							<output>${project.basedir}/target/generated-sources/api</output>
							<apiPackage>todo.api</apiPackage>
							<modelPackage>todo.model</modelPackage>
							<inputSpec>${project.basedir}/swagger/swagger.yaml</inputSpec>
							<language>jersey2-api</language>
							<library>jersey2-api</library>

              <configOptions> 
                <configOption>
                  <name>meep</name>
                  <value>meep</value>
                </configOption>
              </configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-generated-source</id>
						<phase>initialize</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/api/src/gen</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
      <plugin>
        <groupId>com.google.cloud.tools</groupId>
        <artifactId>jib-maven-plugin</artifactId>
        <version>1.1.2</version>
        <executions>
          <execution>
            <id>docker-build</id>
            <phase>install</phase>
            <goals>
              <goal>buildTar</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <allowInsecureRegistries>false</allowInsecureRegistries>
          <from>
            <image>openjdk:11.0.3-jdk-slim-stretch</image>
          </from>
          <to><image>cdconnect/${project.artifactId}</image></to>
          <container>
            <mainClass>bathe.BatheBooter</mainClass>
            <jvmFlags>
              <jvmFlag>--add-exports=java.base/jdk.internal.misc=ALL-UNNAMED</jvmFlag>
              <jvmFlag>-Dio.netty.tryReflectionSetAccessible=true</jvmFlag>
              <jvmFlag>--add-opens=java.base/java.nio=ALL-UNNAMED</jvmFlag>
            </jvmFlags>
            <args>
              <arg>-Rtodo.backend.Application</arg>
            </args>
            <ports>
              <port>8099</port>
            </ports>
          </container>
        </configuration>
      </plugin>
		</plugins>
	</build>
</project>
